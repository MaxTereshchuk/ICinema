@using ICinema.ViewModels
@using System.Text.Json
@model HallVM
@{
	ViewData["Title"] = "Create Hall";
}
<head>
    
    <style>
        .seat {
            width: 30px;
            height: 30px;
            margin: 5px;
            display: inline-block;
            text-align: center;
            line-height: 30px;
            cursor: pointer;
        }

        .available {
            background-color: green;
            color: white;
        }

        .occupied {
            background-color: red;
            color: white;
        }
    </style>
</head>
<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-6">
        <form asp-controller="Hall" asp-action="AddRow" method="post">
            @Html.HiddenFor(m=>Model.Rows)
            <input type="hidden" name="SeatsJson" value="@JsonSerializer.Serialize(Model.Seats)" />
            <button type="submit" class="btn btn-primary">Add Row</button>
        </form>
    </div>
    
    <div class="col-6">
        <a class="btn btn-primary" type="post" asp-controller="Hall" asp-action="DeleteRow">DeleteRow</a>
    </div>
    
</div>
<div>
    @if (Model.Rows != null) 
    {

        @for (int row = 0; row < Model.Rows; row++)
        {
            <div>
                @for (int seat = 0; seat < Model.Seats[row].Count; seat++)
                {
                    var seatClass = Model.Seats[row][seat] == true ? "available" : "occupied";
                    <div class="seat @seatClass"></div>
                }
                <a class="btn btn-primary" type="post" asp-controller="Hall" asp-action="AddSeat">AddSeat</a>
            </div>
        }
    }
</div>




